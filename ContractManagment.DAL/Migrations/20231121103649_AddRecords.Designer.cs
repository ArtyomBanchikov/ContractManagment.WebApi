// <auto-generated />
using System;
using ContractManagment.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContractManagment.DAL.Migrations
{
    [DbContext(typeof(ManagmentContext))]
    [Migration("20231121103649_AddRecords")]
    partial class AddRecords
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ContractManagment.DAL.Entities.ContractEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Value")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("ContractManagment.DAL.Entities.ContractKeyEntity", b =>
                {
                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("KeyId")
                        .HasColumnType("int");

                    b.HasKey("ContractId", "KeyId");

                    b.HasIndex("KeyId");

                    b.ToTable("ContractKeys");
                });

            modelBuilder.Entity("ContractManagment.DAL.Entities.KeyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Keys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "KeyFIOClient",
                            Name = "Абонент"
                        },
                        new
                        {
                            Id = 2,
                            Key = "RegistrationAddress",
                            Name = "Адрес регистрации"
                        },
                        new
                        {
                            Id = 3,
                            Key = "KeyInstallStreet",
                            Name = "Улица установки"
                        },
                        new
                        {
                            Id = 4,
                            Key = "KeyInstallBuilding",
                            Name = "Дом установки"
                        },
                        new
                        {
                            Id = 5,
                            Key = "KeyInstallApartment",
                            Name = "Квартира установки"
                        },
                        new
                        {
                            Id = 6,
                            Key = "KeyInstallPorch",
                            Name = "Подъезд"
                        },
                        new
                        {
                            Id = 7,
                            Key = "KeyInstallStorey",
                            Name = "Этаж"
                        },
                        new
                        {
                            Id = 8,
                            Key = "KeyClientMobilePhone",
                            Name = "Моб.тел"
                        },
                        new
                        {
                            Id = 9,
                            Key = "KeyClientHomePhone",
                            Name = "Дом.тел"
                        },
                        new
                        {
                            Id = 10,
                            Key = "KeyClientPassportSmallNumber",
                            Name = "Паспорт"
                        },
                        new
                        {
                            Id = 11,
                            Key = "KeyClientPassportFullNumber",
                            Name = "Личный номер"
                        },
                        new
                        {
                            Id = 12,
                            Key = "KeyClientPassportIssued",
                            Name = "Выдан"
                        });
                });

            modelBuilder.Entity("ContractManagment.DAL.Entities.Record.RecordEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("ContractManagment.DAL.Entities.Record.RecordKeyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RecordId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RecordId");

                    b.ToTable("RecordsKeys");
                });

            modelBuilder.Entity("ContractManagment.DAL.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ContractManagment.DAL.Entities.ContractKeyEntity", b =>
                {
                    b.HasOne("ContractManagment.DAL.Entities.ContractEntity", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ContractManagment.DAL.Entities.KeyEntity", "Key")
                        .WithMany()
                        .HasForeignKey("KeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Key");
                });

            modelBuilder.Entity("ContractManagment.DAL.Entities.Record.RecordKeyEntity", b =>
                {
                    b.HasOne("ContractManagment.DAL.Entities.Record.RecordEntity", "Record")
                        .WithMany("RecordKeys")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Record");
                });

            modelBuilder.Entity("ContractManagment.DAL.Entities.Record.RecordEntity", b =>
                {
                    b.Navigation("RecordKeys");
                });
#pragma warning restore 612, 618
        }
    }
}
